{"version":3,"file":"static/js/350.ca112f97.chunk.js","mappings":"+SAEMA,EAAG,gCACHC,EAAG,mCAEIC,EAAgB,mCAAG,+FACxBC,EADwB,UACfH,EADe,oCACgBC,GADhB,kBAILG,EAAAA,EAAAA,IAAUD,GAJL,UAItBE,EAJsB,OAMtBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdC,KAAMH,EAAOG,KAEhB,IAEuB,MAApBR,EAASS,OAde,yCAenBR,GAfmB,kFAkBrBS,QAAQC,OAAO,IAAIC,MAAM,yBAlBJ,0DAAH,qDAsBhBC,EAAY,mCAAG,WAAMC,GAAN,kFACpBhB,EADoB,UACXH,EADW,gCACgBC,EADhB,iCAC4CkB,EAD5C,iDAIDf,EAAAA,EAAAA,IAAUD,GAJT,UAIlBE,EAJkB,OAKlBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MAEjB,IAEuB,MAApBP,EAASS,OAZW,yCAafR,GAbe,kFAgBjBS,QAAQC,OAAO,IAAIC,MAAM,yBAhBR,0DAAH,sDAoBZG,EAAe,mCAAG,WAAMC,GAAN,kFACvBlB,EADuB,UACdH,EADc,iBACFqB,EADE,oBACiBpB,EADjB,qCAIJG,EAAAA,EAAAA,IAAUD,GAJN,UAIrBE,EAJqB,OAMrBiB,EAAQjB,EAASE,KAEC,MAApBF,EAASS,OARc,yCASlBQ,GATkB,kFAYpBP,QAAQC,OAAO,IAAIC,MAAM,yBAZL,0DAAH,sDAgBfM,EAAa,mCAAG,WAAMC,GAAN,kFACrBrB,EADqB,UACZH,EADY,iBACAwB,EADA,4BAC2BvB,EAD3B,qCAGFG,EAAAA,EAAAA,IAAUD,GAHR,UAGnBE,EAHmB,OAKnBoB,EAAOpB,EAASE,KAAKkB,KAAKhB,KAAI,SAAAiB,GAClC,MAAO,CACLf,GAAIe,EAAMf,GACVE,KAAMa,EAAMb,KACZc,IAAKD,EAAME,aACXC,UAAWH,EAAMG,UAEpB,IACuB,MAApBxB,EAASS,OAbY,yCAchBW,GAdgB,kFAiBlBV,QAAQC,OAAO,IAAIC,MAAM,yBAjBP,0DAAH,sDAqBba,EAAU,mCAAG,WAAMN,GAAN,kFAClBrB,EADkB,UACTH,EADS,iBACGwB,EADH,4BAC8BvB,EAD9B,4CAICG,EAAAA,EAAAA,IAAUD,GAJX,UAIhBE,EAJgB,OAKhB0B,EAAU1B,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACxC,MAAO,CACLC,GAAID,EAAOC,GACXR,IAAKO,EAAOP,IACZ6B,OAAQtB,EAAOsB,OACfC,QAASvB,EAAOuB,QAEnB,IACuB,MAApB5B,EAASS,OAbS,yCAcbiB,GAda,kFAiBfhB,QAAQC,OAAO,IAAIC,MAAM,yBAjBV,0DAAH,qD,oFClFViB,EAAgB,SAAC,GAAgB,IAAd5B,EAAa,EAAbA,OACxB6B,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACG9B,EAAOG,KAAI,SAAAa,GAAK,OACf,yBACE,UAAC,KAAD,CAASe,GAAE,kBAAaf,EAAMX,IAAM2B,MAAO,CAAEC,KAAMJ,GAAnD,UACGb,EAAMV,MAAM,IAAEU,EAAMT,SAFhBS,EAAMX,GADA,KAStB,C,2GCdD,EAA0B,wB,iBCA1B,EAA0B,6BAA1B,EAA8D,0BAA9D,EAA8F,yB,SCGjF6B,EAAa,WACxB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACAC,QAAQC,IAAIH,EAAaI,IAAI,WAAa,oBAC1C,IAAIC,EAAS,GAeb,OACE,kBAAMC,UAAWC,EAAaC,SAXX,SAAAC,GACnBA,EAAGC,iBACY,KAAXL,GACFM,MAAM,4CAGRV,EAAgB,CAAEW,OAAQP,IAC1BI,EAAGI,OAAOC,OACX,EAGC,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,0BACZC,SArBe,SAAAV,GACnBJ,EAASI,EAAGI,OAAOO,MAAMC,aAC1B,EAoBKf,UAAWC,KAEb,mBAAQD,UAAWC,EAASQ,KAAK,SAAjC,SAA0C,sBAK/C,EC9Bc,SAASO,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO3D,EAAP,KAAe4D,EAAf,KACA,GAAuBzB,EAAAA,EAAAA,MACjBa,GADN,eAC4BR,IAAI,WAAa,GAU7C,OARAqB,EAAAA,EAAAA,YAAU,YACRjD,EAAAA,EAAAA,IAAaoC,GACVc,MAAK,SAAA9D,GACJ4D,GAAU,OAAI5D,GACf,IACA+D,OAAM,SAAAC,GAAK,OAAI1B,QAAQC,IAAI,CAAEyB,MAAAA,GAAlB,GACf,GAAE,CAAChB,KAGF,qBAASN,UAAWC,EAApB,WACE,SAACT,EAAD,KACA,SAACN,EAAA,EAAD,CAAe5B,OAAQA,MAG5B,C","sources":["API.js","components/MoviesGallery/MoviesGallery.js","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForms.module.css?24dd","components/SearchForm/SearchForm.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = `https://api.themoviedb.org/3/`;\nconst key = `cc414cf8db239a27de6299451ff31478`;\n\nexport const fetchTrendMovies = async () => {\n  const url = `${api}trending/all/day?api_key=${key}`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n        name: result.name,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchMovies = async inputSearch => {\n  const url = `${api}search/movie?api_key=${key}&language=en-US&query=${inputSearch}&page=1&include_adult=false`;\n\n  try {\n    const response = await axios.get(url);\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchMovieInfo = async inputId => {\n  const url = `${api}movie/${inputId}?api_key=${key}&language=en-US`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movie = response.data;\n\n    if (response.status === 200) {\n      return movie;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchCredits = async movieId => {\n  const url = `${api}movie/${movieId}/credits?api_key=${key}&language=en-US`;\n  try {\n    const response = await axios.get(url);\n\n    const cast = response.data.cast.map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        img: actor.profile_path,\n        character: actor.character,\n      };\n    });\n    if (response.status === 200) {\n      return cast;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const getReviews = async movieId => {\n  const url = `${api}movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`;\n\n  try {\n    const response = await axios.get(url);\n    const reviews = response.data.results.map(result => {\n      return {\n        id: result.id,\n        url: result.url,\n        author: result.author,\n        content: result.content,\n      };\n    });\n    if (response.status === 200) {\n      return reviews;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n","import { NavLink, useLocation } from 'react-router-dom';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title} {movie.name}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movies_wrapper__RVmCE\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchForms_wrapper__HGYzS\",\"form\":\"SearchForms_form__J0IzH\",\"btn\":\"SearchForms_btn__qeT79\"};","import { useSearchParams } from 'react-router-dom';\n\nimport css from './SearchForms.module.css';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(searchParams.get('querry') || 'enter movie name');\n  let search = '';\n  const handleChange = ev => {\n    search = ev.target.value.toLowerCase();\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    if (search === '') {\n      alert('u need type title of movie u looking for');\n    }\n\n    setSearchParams({ querry: search });\n    ev.target.reset();\n  };\n\n  return (\n    <form className={css.wrapper} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"type the title of movie\"\n        onChange={handleChange}\n        className={css.form}\n      />\n      <button className={css.btn} type=\"submit\">\n        start searching\n      </button>\n    </form>\n  );\n};\n","import { searchMovies } from 'API';\nimport { useEffect, useState } from 'react';\nimport css from './Movies.module.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const querry = searchParams.get('querry') || '';\n\n  useEffect(() => {\n    searchMovies(querry)\n      .then(movies => {\n        setMovies([...movies]);\n      })\n      .catch(error => console.log({ error }));\n  }, [querry]);\n\n  return (\n    <section className={css.wrapper}>\n      <SearchForm />\n      <MoviesGallery movies={movies} />\n    </section>\n  );\n}\n"],"names":["api","key","fetchTrendMovies","url","axios","response","movies","data","results","map","result","id","title","name","status","Promise","reject","Error","searchMovies","inputSearch","searchMovieInfo","inputId","movie","searchCredits","movieId","cast","actor","img","profile_path","character","getReviews","reviews","author","content","MoviesGallery","location","useLocation","to","state","from","SearchForm","useSearchParams","searchParams","setSearchParams","console","log","get","search","className","css","onSubmit","ev","preventDefault","alert","querry","target","reset","type","autoComplete","autoFocus","placeholder","onChange","value","toLowerCase","Movies","useState","setMovies","useEffect","then","catch","error"],"sourceRoot":""}