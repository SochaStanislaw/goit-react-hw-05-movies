{"version":3,"file":"static/js/845.b7d5180d.chunk.js","mappings":"+SAEMA,EAAG,gCACHC,EAAG,mCAEIC,EAAgB,mCAAG,+FACxBC,EADwB,UACfH,EADe,oCACgBC,GADhB,kBAILG,EAAAA,EAAAA,IAAUD,GAJL,UAItBE,EAJsB,OAMtBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdC,KAAMH,EAAOG,KAEhB,IAEuB,MAApBR,EAASS,OAde,yCAenBR,GAfmB,kFAkBrBS,QAAQC,OAAO,IAAIC,MAAM,yBAlBJ,0DAAH,qDAsBhBC,EAAY,mCAAG,WAAMC,GAAN,kFACpBhB,EADoB,UACXH,EADW,gCACgBC,EADhB,iCAC4CkB,EAD5C,iDAIDf,EAAAA,EAAAA,IAAUD,GAJT,UAIlBE,EAJkB,OAKlBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MAEjB,IAEuB,MAApBP,EAASS,OAZW,yCAafR,GAbe,kFAgBjBS,QAAQC,OAAO,IAAIC,MAAM,yBAhBR,0DAAH,sDAoBZG,EAAe,mCAAG,WAAMC,GAAN,kFACvBlB,EADuB,UACdH,EADc,iBACFqB,EADE,oBACiBpB,EADjB,qCAIJG,EAAAA,EAAAA,IAAUD,GAJN,UAIrBE,EAJqB,OAMrBiB,EAAQjB,EAASE,KAEC,MAApBF,EAASS,OARc,yCASlBQ,GATkB,kFAYpBP,QAAQC,OAAO,IAAIC,MAAM,yBAZL,0DAAH,sDAgBfM,EAAa,mCAAG,WAAMC,GAAN,kFACrBrB,EADqB,UACZH,EADY,iBACAwB,EADA,4BAC2BvB,EAD3B,qCAGFG,EAAAA,EAAAA,IAAUD,GAHR,UAGnBE,EAHmB,OAKnBoB,EAAOpB,EAASE,KAAKkB,KAAKhB,KAAI,SAAAiB,GAClC,MAAO,CACLf,GAAIe,EAAMf,GACVE,KAAMa,EAAMb,KACZc,IAAKD,EAAME,aACXC,UAAWH,EAAMG,UAEpB,IACuB,MAApBxB,EAASS,OAbY,yCAchBW,GAdgB,kFAiBlBV,QAAQC,OAAO,IAAIC,MAAM,yBAjBP,0DAAH,sDAqBba,EAAU,mCAAG,WAAMN,GAAN,kFAClBrB,EADkB,UACTH,EADS,iBACGwB,EADH,4BAC8BvB,EAD9B,4CAICG,EAAAA,EAAAA,IAAUD,GAJX,UAIhBE,EAJgB,OAKhB0B,EAAU1B,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACxC,MAAO,CACLC,GAAID,EAAOC,GACXR,IAAKO,EAAOP,IACZ6B,OAAQtB,EAAOsB,OACfC,QAASvB,EAAOuB,QAEnB,IACuB,MAApB5B,EAASS,OAbS,yCAcbiB,GAda,kFAiBfhB,QAAQC,OAAO,IAAIC,MAAM,yBAjBV,0DAAH,qD,oHChFR,SAASiB,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOJ,EAAP,KAAgBK,EAAhB,KACQZ,GAAYa,EAAAA,EAAAA,MAAZb,QAQR,OANAc,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAWN,GAASe,MAAK,SAAAR,GACvBK,EAAWL,EACZ,GACF,GAAE,CAACP,IAEmB,IAAnBO,EAAQS,QACH,uBAAG,oBAGRT,EAAQS,OAAS,GAEjB,0BACE,wBACGT,EAAQtB,KAAI,SAAAgC,GAAI,OACf,yBACE,4BACE,yBAAG,WAASA,EAAKT,WACjB,yBAAG,WAASS,EAAKR,eAHZQ,EAAK9B,GADC,aAJzB,CAgBD,C","sources":["API.js","components/Review/Review.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = `https://api.themoviedb.org/3/`;\nconst key = `cc414cf8db239a27de6299451ff31478`;\n\nexport const fetchTrendMovies = async () => {\n  const url = `${api}trending/all/day?api_key=${key}`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n        name: result.name,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchMovies = async inputSearch => {\n  const url = `${api}search/movie?api_key=${key}&language=en-US&query=${inputSearch}&page=1&include_adult=false`;\n\n  try {\n    const response = await axios.get(url);\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchMovieInfo = async inputId => {\n  const url = `${api}movie/${inputId}?api_key=${key}&language=en-US`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movie = response.data;\n\n    if (response.status === 200) {\n      return movie;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchCredits = async movieId => {\n  const url = `${api}movie/${movieId}/credits?api_key=${key}&language=en-US`;\n  try {\n    const response = await axios.get(url);\n\n    const cast = response.data.cast.map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        img: actor.profile_path,\n        character: actor.character,\n      };\n    });\n    if (response.status === 200) {\n      return cast;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const getReviews = async movieId => {\n  const url = `${api}movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`;\n\n  try {\n    const response = await axios.get(url);\n    const reviews = response.data.results.map(result => {\n      return {\n        id: result.id,\n        url: result.url,\n        author: result.author,\n        content: result.content,\n      };\n    });\n    if (response.status === 200) {\n      return reviews;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n","import { getReviews } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Review() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(reviews => {\n      setReviews(reviews);\n    });\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>no reviews here</p>;\n  }\n\n  if (reviews.length > 0) {\n    return (\n      <div>\n        <ul>\n          {reviews.map(item => (\n            <li key={item.id}>\n              <div>\n                <p>Author: {item.author}</p>\n                <p>Review: {item.content}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"],"names":["api","key","fetchTrendMovies","url","axios","response","movies","data","results","map","result","id","title","name","status","Promise","reject","Error","searchMovies","inputSearch","searchMovieInfo","inputId","movie","searchCredits","movieId","cast","actor","img","profile_path","character","getReviews","reviews","author","content","Review","useState","setReviews","useParams","useEffect","then","length","item"],"sourceRoot":""}