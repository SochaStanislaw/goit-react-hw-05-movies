{"version":3,"file":"static/js/270.a327a2e5.chunk.js","mappings":"+SAEMA,EAAG,gCACHC,EAAG,mCAEIC,EAAgB,mCAAG,+FACxBC,EADwB,UACfH,EADe,oCACgBC,GADhB,kBAILG,EAAAA,EAAAA,IAAUD,GAJL,UAItBE,EAJsB,OAMtBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdC,KAAMH,EAAOG,KAEhB,IAEuB,MAApBR,EAASS,OAde,yCAenBR,GAfmB,kFAkBrBS,QAAQC,OAAO,IAAIC,MAAM,yBAlBJ,0DAAH,qDAsBhBC,EAAY,mCAAG,WAAMC,GAAN,kFACpBhB,EADoB,UACXH,EADW,gCACgBC,EADhB,iCAC4CkB,EAD5C,iDAIDf,EAAAA,EAAAA,IAAUD,GAJT,UAIlBE,EAJkB,OAKlBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MAEjB,IAEuB,MAApBP,EAASS,OAZW,yCAafR,GAbe,kFAgBjBS,QAAQC,OAAO,IAAIC,MAAM,yBAhBR,0DAAH,sDAoBZG,EAAe,mCAAG,WAAMC,GAAN,kFACvBlB,EADuB,UACdH,EADc,iBACFqB,EADE,oBACiBpB,EADjB,qCAIJG,EAAAA,EAAAA,IAAUD,GAJN,UAIrBE,EAJqB,OAMrBiB,EAAQjB,EAASE,KAEC,MAApBF,EAASS,OARc,yCASlBQ,GATkB,kFAYpBP,QAAQC,OAAO,IAAIC,MAAM,yBAZL,0DAAH,sDAgBfM,EAAa,mCAAG,WAAMC,GAAN,kFACrBrB,EADqB,UACZH,EADY,iBACAwB,EADA,4BAC2BvB,EAD3B,qCAGFG,EAAAA,EAAAA,IAAUD,GAHR,UAGnBE,EAHmB,OAKnBoB,EAAOpB,EAASE,KAAKkB,KAAKhB,KAAI,SAAAiB,GAClC,MAAO,CACLf,GAAIe,EAAMf,GACVE,KAAMa,EAAMb,KACZc,IAAKD,EAAME,aACXC,UAAWH,EAAMG,UAEpB,IACuB,MAApBxB,EAASS,OAbY,yCAchBW,GAdgB,kFAiBlBV,QAAQC,OAAO,IAAIC,MAAM,yBAjBP,0DAAH,sDAqBba,EAAU,mCAAG,WAAMN,GAAN,kFAClBrB,EADkB,UACTH,EADS,iBACGwB,EADH,4BAC8BvB,EAD9B,4CAICG,EAAAA,EAAAA,IAAUD,GAJX,UAIhBE,EAJgB,OAKhB0B,EAAU1B,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACxC,MAAO,CACLC,GAAID,EAAOC,GACXR,IAAKO,EAAOP,IACZ6B,OAAQtB,EAAOsB,OACfC,QAASvB,EAAOuB,QAEnB,IACuB,MAApB5B,EAASS,OAbS,yCAcbiB,GAda,kFAiBfhB,QAAQC,OAAO,IAAIC,MAAM,yBAjBV,0DAAH,qD,iGCnFvB,EAAsB,qB,SCETiB,EAAU,SAAAC,GACrB,IAAMC,EAAWD,EAASA,SAE1B,OACE,mBAAQE,UAAWC,EAASC,KAAK,SAAjC,UACE,SAAC,KAAD,CAAMC,GAAIJ,EAAV,SAAoB,aAGzB,E,kBCNc,SAASK,IAAgB,IAAD,IAC7BjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QACR,GAAkCmB,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE7CC,EAAAA,EAAAA,YAAU,YACR9B,EAAAA,EAAAA,IAAgBI,GAAS2B,MAAK,SAAA7B,GAC5BuB,EAAavB,EACd,GACF,GAAE,CAACE,IAEJ,IAAQ4B,EACNR,EADMQ,SAAUC,EAChBT,EADgBS,YAAazC,EAC7BgC,EAD6BhC,MAAO0C,EACpCV,EADoCU,OAAQC,EAC5CX,EAD4CW,aAAcC,EAC1DZ,EAD0DY,eAEtDC,EAAQH,GAAUA,EAAO7C,KAAI,SAAAiD,GAAI,OAAIA,EAAK7C,IAAT,IAAe8C,KAAK,MAE3D,OACE,gCACE,4BACE,SAACzB,EAAD,CAASC,SAAUW,KACnB,4BACE,0BACE,gBACEc,IAAG,yCAAoCP,GACvCQ,IAAKjD,OAIT,4BACE,wBAAK4C,KACL,yBAAG,cAAYD,MACf,yBAAG,cAAYH,MACf,yBAAG,WAASK,eAIlB,4BACE,uBAAG,gBACH,2BACE,yBACE,SAAC,KAAD,CACEjB,GAAE,kBAAahB,EAAb,YACFwB,MAAO,CAAEC,KAAMH,GAFjB,SAGC,aAIH,yBACE,SAAC,KAAD,CACEN,GAAE,kBAAahB,EAAb,WACFwB,MAAO,CAAEC,KAAMH,GAFjB,SAGC,mBAKL,SAAC,KAAD,SAIP,C","sources":["API.js","webpack://goit-react-hw-05-movies/./src/components/BtnBack/BtnBack.module.css?a548","components/BtnBack/BtnBack.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = `https://api.themoviedb.org/3/`;\nconst key = `cc414cf8db239a27de6299451ff31478`;\n\nexport const fetchTrendMovies = async () => {\n  const url = `${api}trending/all/day?api_key=${key}`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n        name: result.name,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchMovies = async inputSearch => {\n  const url = `${api}search/movie?api_key=${key}&language=en-US&query=${inputSearch}&page=1&include_adult=false`;\n\n  try {\n    const response = await axios.get(url);\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchMovieInfo = async inputId => {\n  const url = `${api}movie/${inputId}?api_key=${key}&language=en-US`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movie = response.data;\n\n    if (response.status === 200) {\n      return movie;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const searchCredits = async movieId => {\n  const url = `${api}movie/${movieId}/credits?api_key=${key}&language=en-US`;\n  try {\n    const response = await axios.get(url);\n\n    const cast = response.data.cast.map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        img: actor.profile_path,\n        character: actor.character,\n      };\n    });\n    if (response.status === 200) {\n      return cast;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n\nexport const getReviews = async movieId => {\n  const url = `${api}movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`;\n\n  try {\n    const response = await axios.get(url);\n    const reviews = response.data.results.map(result => {\n      return {\n        id: result.id,\n        url: result.url,\n        author: result.author,\n        content: result.content,\n      };\n    });\n    if (response.status === 200) {\n      return reviews;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('¯_(ツ)_/¯'));\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"BtnBack_btn__ODDcF\"};","import { Link } from 'react-router-dom';\nimport css from './BtnBack.module.css';\n\nexport const BtnBack = location => {\n  const backLink = location.location;\n\n  return (\n    <button className={css.btn} type=\"button\">\n      <Link to={backLink}>Go back</Link>\n    </button>\n  );\n};\n","import { searchMovieInfo } from 'API';\nimport { BtnBack } from 'components/BtnBack/BtnBack';\nimport { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState([]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    searchMovieInfo(movieId).then(movie => {\n      setMovieInfo(movie);\n    });\n  }, [movieId]);\n\n  const { overview, poster_path, title, genres, vote_average, original_title } =\n    movieInfo;\n  const genre = genres && genres.map(genr => genr.name).join(', ');\n\n  return (\n    <section>\n      <div>\n        <BtnBack location={backLinkHref}></BtnBack>\n        <div>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            ></img>\n          </div>\n\n          <div>\n            <h2>{original_title}</h2>\n            <p>UserScore: {vote_average}</p>\n            <p>Overviews: {overview}</p>\n            <p>Genres: {genre}</p>\n          </div>\n        </div>\n      </div>\n      <div>\n        <p>More info:</p>\n        <ul>\n          <li>\n            <NavLink\n              to={`/movies/${movieId}/credits`}\n              state={{ from: backLinkHref }}\n            >\n              Cast:\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to={`/movies/${movieId}/review`}\n              state={{ from: backLinkHref }}\n            >\n              Reviews:\n            </NavLink>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </section>\n  );\n}\n"],"names":["api","key","fetchTrendMovies","url","axios","response","movies","data","results","map","result","id","title","name","status","Promise","reject","Error","searchMovies","inputSearch","searchMovieInfo","inputId","movie","searchCredits","movieId","cast","actor","img","profile_path","character","getReviews","reviews","author","content","BtnBack","location","backLink","className","css","type","to","MovieDetails","useParams","useState","movieInfo","setMovieInfo","backLinkHref","useLocation","state","from","useEffect","then","overview","poster_path","genres","vote_average","original_title","genre","genr","join","src","alt"],"sourceRoot":""}